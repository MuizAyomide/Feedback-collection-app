import React, { useState } from "react";
import { arrayUnion, doc, updateDoc } from "firebase/firestore";
import { db } from "./Firebase";

const MessageForm = ({ userId }) => {
  const [message, setMessage] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const userDocRef = doc(db, "users", userId);
      await updateDoc(userDocRef, {
        messages: arrayUnion({
          text: message,
          createdAt: new Date(),
        }),
      });
      console.log("Message sent successfully!");
      setMessage(""); // Clear the input field after sending the message
    } catch (err) {
      console.error("Error sending message:", err);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <input
        type="text"
        value={message}
        onChange={(e) => setMessage(e.target.value)}
      />
      <button type="submit">Send Message</button>
    </form>
  );
};

export default MessageForm;

import React, { useEffect } from "react";
import "./../src/App.css";
import { BrowserRouter, Route, Routes } from "react-router-dom";
import Navbar from "./Components/Navbar/Navbar";
import big_logo from "./assets/big-logo.png";
import Home from "./Components/Home/Home";
import Login from "./Components/Login/Login";
import Register from "./Components/Register/Register";
import Category from "./Pages/Category/Category";
import User from "./Pages/User/User";
import Product from "./Pages/Product/Product";
import Candidate from "./Pages/Candidate/Candidate";
import Contact from "./Components/Contact/Contact";
import Notification from "./Components/Notification/Notifcation";
import { onAuthStateChanged } from "firebase/auth";
import { auth } from "./Lib/Firebase";
import { useUserStore } from "./Lib/userStore";

const App = () => {
  const { currentUser, fetchUserInfo } = useUserStore();

  const user = true;

  useEffect(() => {
    const unSub = onAuthStateChanged(auth, (user) => {
      fetchUserInfo(user.uid);
    });

    return () => {
      unSub();
    };
  }, [fetchUserInfo]);

  // console.log(currentUser.id);

  return (
    <div className="app">
        <Navbar />
        <>
          <img className="bg-img" src={big_logo} alt="" />
        </>
      <BrowserRouter>
        <Routes>
          {
            currentUser && <>
            <Route path="/category" element={<Category />} />
            <Route path="/user" element={<User />} />
            <Route path="/contact" element={<Contact />} />
            <Route path="/product" element={<Product />} />
            <Route path="/candidate" element={<Candidate />} />
            <Route path="/" element={<Home />} />
          <Route path="/login" element={<Login />} />
          <Route path="/register" element={<Register />} />
            </>
          }
        </Routes>
      </BrowserRouter>
      <Notification />
    </div>
  );
};

export default App;


<div className="other-feedback">
        <h3>Other Feedbacks</h3>
        <div className="feedbacks">
          {feedback?.length > 0 && (
            <div className="feedback">
              <div className="username-text">
                {currentUser.username.slice(0, 1).toUpperCase()}
              </div>
              {feedback.map((feed) => (
                <div className="feedback-text" key={feed?.createdAt}>
                  {feed.text}
                </div>
              ))}
            </div>
          )}
        </div>
      </div>

      <div className="feedbacks">
      {feedback?.length > 0 && (
        <div className="feedback">
        {feedback.map((feed) => (
            <div className="username-text">
              {currentUser.username.slice(0, 1).toUpperCase()}
            </div>
            <div className="feedback-text" key={feed?.createdAt}>
              {feed.text}
            </div>
          ))}
        </div>
      )}
    </div>